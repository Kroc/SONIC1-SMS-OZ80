;; Sonic 1 Master System Disassembly
   -------------------------------------------------------------------------------------------------
   created by Kroc Camen <kroc@camendesign.com> and given to the Public Domain; you may do anything
   you like with this code as long as you respect the TradeMarks and (any) Copyrights within.
   absolutely no warranty implied
   =================================================================================================
;;

;badnick - chopper

PROC    :mob_badnick_chopper                                SECTION ::mobs                  ;$7CF6
        ;===========================================================================================
PARAMS  IX`mob          ``Address of the current mob being processed
{
        ;mob does not collide with the floor
        set     5   [IX`mob+#mob.flags]
        
        ;define the size of the mob
        ;TODO: we don't need to do this every frame. we could set this up when the mob spawns
        ld      [IX`mob+#mob.width]     8
        ld      [IX`mob+#mob.height]    12
        
        ld      A                   [IX`mob+#mob.unknown14]
        and     A
        jr      z   ._1
        
        dec     [IX`mob+#mob.unknown14]
        
        ;remove mob from screen (no sprite layout)
        xor     A`zero
        ld      [IX`mob+#mob.spriteLayout+0]    A`zero
        ld      [IX`mob+#mob.spriteLayout+1]    A`zero
        ret
        
        ;-------------------------------------------------------------------------------------------
        
._1     bit     0   [IX`mobs+#mob.flags]
        jr      nz  ._3
        
        bit     1   [IX`mobs+#mob.flags]
        jr      nz  ._2
        
        ld      L                   [IX`mob+#mob.Y+0]
        ld      H                   [IX`mob+#mob.Y+1]
        ld      DE                  $FFF4
        add     HL                  DE
        ld      [IX`mob+$12]            L
        ld      [IX`mob+#mob.unknown13] H
        ld      L                   [IX`mob+#mob.X+0]
        ld      H                   [IX`mob+#mob.X+1]
        ld      DE                  $0008
        add     HL                  DE
        ld      [IX`mob+#mob.X+0]   L
        ld      [IX`mob+#mob.X+1]   H
        set     1   [IX`mob+#mob.flags]
        
._2     ld      [IX`mob+#mob.Yspeed+0]      $00
        ld      [IX`mob+#mob.Yspeed+1]      $FC
        ld      [IX`mob+#mob.Ydirection]    $FF
        set     0   [IX`mob+#mob.flags]
        
        ld      A                   $12
        rst     :rst_playSFX
        
        ld      [IX`mob+#mob.unknown11] $03
        jr      ._5
        
._3     ld      L                   [IX`mob+#mob.Yspeed+0]
        ld      H                   [IX`mob+#mob.Yspeed+1]
        ld      A                   [IX`mob+#mob.Ydirection]
        ld      DE                  $0010
        add     HL                  DE
        adc     A                   $00
        ex      DE                  HL
        and     A
        jp      m   ._4
        ld      HL                  $0400
        and     A
        sbc     HL                  DE
        jr      nc  ._4
        ld      DE                  $0400
._4     ld      [IX`mob+#mob.Yspeed+0]      E
        ld      [IX`mob+#mob.Yspeed+1]      D
        ld      [IX`mob+#mob.Ydirection]    A
        ld      E                   [IX`mob+$12]
        ld      D                   [IX`mob+#mob.unknown13]
        ld      L                   [IX`mob+#mob.Y+0]
        ld      H                   [IX`mob+#mob.Y+1]
        xor     A
        sbc     HL                  DE
        jr      c   ._5
        ld      [IX`mob+#mob.Ysubpixel]     A
        ld      [IX`mob+#mob.Y+0]           E
        ld      [IX`mob+#mob.Y+1]           D
        ld      [IX`mob+#mob.Yspeed+0]      A
        ld      [IX`mob+#mob.Yspeed+1]      A
        ld      [IX`mob+#mob.Ydirection]    A
        ld      [IX`mob+#mob.unknown14]     $1E
        res     0   [IX`mob+#mob.flags]
._5     ld      DE                  ._7de1
        ld      BC                  ._7ddc
        call    :animateMob
        ld      A                   [IX`mob+#mob.unknown11]
        and     A
        jr      z   ._6
        
        dec     [IX`mob+#mob.unknown11]
        ld      [IX`mob+#mob.spriteLayout+0]    (LO ._7df7)
        ld      [IX`mob+#mob.spriteLayout+1]    (HI ._7df7)
        
._6     ld      HL                  $0204
        ld      [$.TEMP6]           HL
        call    :detectCollisionWithSonic
        
        ld      HL                  $0000
        ld      [$.TEMP1]           HL
        call    nc,:hitPlayer
        
        ret

._7ddc  BYTE    $00, $04, $01, $04, $FF

        ;this looks like sprite layout data, but isn't quite normal
._7de1  BYTE    $60, $62, $FF, $FF, $FF, $FF
        BYTE    $FF, $FF, $FF, $FF, $FF, $FF
        BYTE    $FF, $FF, $FF, $FF, $FF, $FF
        BYTE    $64, $66, $FF, $FF
._7df7  BYTE    $FF, $FF, $FF, $FF, $68, $6A
        BYTE    $FF, $FF, $FF, $FF, $FF

}