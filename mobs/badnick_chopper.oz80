;; Sonic 1 Master System Disassembly
   -------------------------------------------------------------------------------------------------
   created by Kroc Camen <kroc@camendesign.com> and given to the Public Domain; you may do anything
   you like with this code as long as you respect the TradeMarks and (any) Copyrights within.
   absolutely no warranty implied
   =================================================================================================
;;

;badnick - chopper

PROC    :mob_badnick_chopper                    SECTION ::mobs                  ;$7CF6
        ;==============================================================================
PARAMS  IX`mob          ``Address of the current mob being processed
{
        set     5,[ix+#mob.flags]               ;mob does not collide with the floor
        ld      [ix+#mob.width],$08
        ld      [ix+#mob.height],$0c
        ld      a,[ix+#mob.unknown14]
        and     a
        jr      z,._1
        dec     [ix+#mob.unknown14]
        xor     a`zero
        ld      [ix+#mob.spriteLayout+0],a`zero
        ld      [ix+#mob.spriteLayout+1],a`zero
        ret
        
._1     bit     0,[ix+#mob.flags]
        jr      nz,._3
        bit     1,[ix+#mob.flags]
        jr      nz,._2
        ld      l,[ix+#mob.Y+0]
        ld      h,[ix+#mob.Y+1]
        ld      de,$fff4
        add     hl,de
        ld      [ix+$12],l
        ld      [ix+#mob.unknown13],h
        ld      l,[ix+#mob.X+0]
        ld      h,[ix+#mob.X+1]
        ld      de,$0008
        add     hl,de
        ld      [ix+#mob.X+0],l
        ld      [ix+#mob.X+1],h
        set     1,[ix+#mob.flags]
._2     ld      [ix+#mob.Yspeed+0],$00
        ld      [ix+#mob.Yspeed+1],$fc
        ld      [ix+#mob.Ydirection],$ff
        set     0,[ix+#mob.flags]
        ld      a,$12
        rst     :rst_playSFX
        ld      [ix+#mob.unknown11],$03
        jr      ._5
        
._3     ld      l,[ix+#mob.Yspeed+0]
        ld      h,[ix+#mob.Yspeed+1]
        ld      a,[ix+#mob.Ydirection]
        ld      de,$0010
        add     hl,de
        adc     a,$00
        ex      de,hl
        and     a
        jp      m,._4
        ld      hl,$0400
        and     a
        sbc     hl,de
        jr      nc,._4
        ld      de,$0400
._4     ld      [ix+#mob.Yspeed+0],e
        ld      [ix+#mob.Yspeed+1],d
        ld      [ix+#mob.Ydirection],a
        ld      e,[ix+$12]
        ld      d,[ix+#mob.unknown13]
        ld      l,[ix+#mob.Y+0]
        ld      h,[ix+#mob.Y+1]
        xor     a
        sbc     hl,de
        jr      c,._5
        ld      [ix+#mob.Ysubpixel],a
        ld      [ix+#mob.Y+0],e
        ld      [ix+#mob.Y+1],d
        ld      [ix+#mob.Yspeed+0],a
        ld      [ix+#mob.Yspeed+1],a
        ld      [ix+#mob.Ydirection],a
        ld      [ix+#mob.unknown14],$1e
        res     0,[ix+#mob.flags]
._5     ld      de,._7de1
        ld      bc,._7ddc
        call    :_7c41
        ld      a,[ix+#mob.unknown11]
        and     a
        jr      z,._6
        dec     [ix+#mob.unknown11]
        ld      [ix+#mob.spriteLayout+0],LO ._7df7
        ld      [ix+#mob.spriteLayout+1],HI ._7df7
._6     ld      hl,$0204
        ld      [$.TEMP6],hl
        call    :detectCollisionWithSonic
        ld      hl,$0000
        ld      [$.TEMP1],hl
        call    nc,:hitPlayer
        ret

._7ddc  BYTE $00, $04, $01, $04, $FF

        ;this looks like sprite layout data, but isn't quite normal
._7de1  BYTE $60, $62, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF
        BYTE $64, $66, $FF, $FF
._7df7  BYTE $FF, $FF, $FF, $FF, $68, $6A
        BYTE $FF, $FF, $FF, $FF, $FF

}