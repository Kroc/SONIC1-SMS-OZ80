;; Sonic 1 Master System Disassembly
   -------------------------------------------------------------------------------------------------
   created by Kroc Camen <kroc@camendesign.com> and given to the Public Domain; you may do anything
   you like with this code as long as you respect the TradeMarks and (any) Copyrights within.
   absolutely no warranty implied
   =================================================================================================
;;

;final animation

PROC    :mob_anim_final                                     SECTION ::mobs                  ;$BDF9
        ;===========================================================================================
PARAMS  IX`mob          ``Address of the current mob being processed
{
        ;mob does not collide with the floor
        set     5   [IX`mob+#mob.flags]
        
        ;clear joypad input
        ld      [IY`vars+#vars.joypad]  $FF
        
        bit     1   [IX`mob+#mob.flags]
        jr      nz  ._1
        ld      HL                  :S1_BossPalette
        ld      A                   %00000010
        call    ::interrupts:loadPaletteOnInterrupt
        
        ;remove the player (i.e. prevent player interaction)
        ld      A                   $FF
        ld      [$.SONIC]           A
        ;move Sonic off the level
        ld      HL                  $0000
        ld      [$.SONIC.Y]         HL
        
        ld      [IX`mob+$12]        $FF
        set     6   [IY`vars+#vars.timeLightningFlags]      ;lock the screen - no scrolling
        set     1   [IX`mob+#mob.flags]
._1     ld      A                   [$.FRAMECOUNT]
        rrca    
        jr      c   ._2
        ld      A                   [IX`mob+$12]
        and     A
        jr      z   ._2
        dec     [IX`mob+$12]
        jr      nz  ._2
        ld      L                   [IX`mob+#mob.X+0]
        ld      H                   [IX`mob+#mob.X+1]
        ld      DE                  $003C
        add     HL                  DE
        ld      [$.SONIC.X]         HL
        ld      L                   [IX`mob+#mob.Y+0]
        ld      H                   [IX`mob+#mob.Y+1]
        ld      DE                  $FFC0
        add     HL                  DE
        ld      [$.SONIC.Y]         HL
        xor     A`zero                                      ;set A to 0
        ld      [$.SONIC]           A`zero
        set     6   [IY+#vars.unknown0]
        
        ld      A                   ::sound:S1_MusicPointers.titleScreen.index   ;=$06
        rst     :rst_playSFX
        
._2     ld      [IX`mob+#mob.width]     32
        ld      [IX`mob+#mob.height]    28
        xor     A`zero
        ld      [IX`mob+#mob.Xspeed+0]      A`zero
        ld      [IX`mob+#mob.Xspeed+1]      $01
        ld      [IX`mob+#mob.Xdirection]    A`zero
        ld      [IX`mob+#mob.Yspeed+0]      A`zero
        ld      [IX`mob+#mob.Yspeed+1]      A`zero
        ld      [IX`mob+#mob.Ydirection]    A`zero
        bit     6   [IY`vars+#vars.timeLightningFlags]
        jr      z   ._3
        ld      DE                  [$.CAMERA_X]
        ld      HL                  $0040
        add     HL                  DE
        ld      C                   [IX`mob+#mob.X+0]
        ld      B                   [IX`mob+#mob.X+1]
        and     A
        sbc     HL                  BC
        jr      nc  ._3
        inc     DE
        ld      [$.CAMERA_X]        DE
._3     ld      [IX`mob+#mob.spriteLayout+0]    (LO ._bf21)
        ld      [IX`mob+#mob.spriteLayout+1]    (HI ._bf21)
        bit     0   [IX`mob+#mob.flags]
        jr      nz  ._4
        ld      HL                  $1008
        ld      [$.TEMP6]           HL
        call    :detectCollisionWithSonic
        jr      c   ._4
        ld      DE                  $0001
        ld      HL                  [$.SONIC.Yspeed]
        ld      A                   L
        cpl     
        ld      L                   A
        ld      A                   H
        cpl     
        ld      H                   A
        ld      A                   [$.SONIC.Ydirection]
        cpl     
        add     HL                  DE
        adc     A                   $00
        ld      [$.SONIC.Yspeed]    HL
        ld      [$.SONIC.Ydirection]    A
        res     6   [IY`vars+#vars.timeLightningFlags]
        set     0   [IX`mob+#mob.flags]
        ld      [IX`mob+#mob.unknown11] $01
        ld      A                   $01
        rst     :rst_playSFX
        
._4     call    :_79fa
        bit     0   [IX`mob+#mob.flags]
        ret     z
        
        xor     A`zero
        ld      [IX`mob+#mob.Yspeed+0]          $40
        ld      [IX`mob+#mob.Yspeed+1]          A`zero
        ld      [IX`mob+#mob.Ydirection]        A`zero
        ld      [IX`mob+#mob.spriteLayout+0]    (LO ._bf33)
        ld      [IX`mob+#mob.spriteLayout+1]    (HI ._bf33)
        dec     [IX`mob+#mob.unknown11]
        ret     nz
        
        call    :_7a3a
        ld      [IX`mob+#mob.unknown11] $18
        inc     [IX`mob+#mob.unknown13]
        ld      A                   [IX`mob+#mob.unknown13]
        cp      $0A
        ret     c
        ld      A                   [$.D27F]
        cp      $06
        jr      c   ._5
        set     7   [IY`vars+#vars.unknown0]
        ret
        
._5     ld      A                   [$.D289]
        and     A
        ret     nz
        ld      A                   $20
        ld      [$.D289]            A
        set     2   [IY`vars+#vars.unknown_0D]
        ret

._bf21  BYTE    $2A $2C $2E $30 $32 $FF
        BYTE    $4A $4C $4E $50 $52 $FF
        BYTE    $6A $6C $6E $70 $72 $FF

        ;sprite layout
._bf33  BYTE    $2A $34 $36 $38 $32 $FF
        BYTE    $4A $4C $4E $50 $52 $FF
        BYTE    $6A $6C $6E $70 $72 $FF
        BYTE    $5C $5E $FF $FF $FF $FF
        BYTE    $FF
}