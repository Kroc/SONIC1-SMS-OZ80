;; Sonic 1 Master System Disassembly
   -------------------------------------------------------------------------------------------------
   created by Kroc Camen <kroc@camendesign.com> and given to the Public Domain; you may do anything
   you like with this code as long as you respect the TradeMarks and (any) Copyrights within.
   absolutely no warranty implied
   =================================================================================================
;;

;badnick - Yadrin (Bridge)

PROC    :mob_badnick_yadrin                     SECTION ::mobs                  ;$82E6
        ;==============================================================================
PARAMS  IX`mob          ``Address of the current mob being processed
{
        ld      [IX`mob+#mob.width]     16
        ld      [IX`mob+#mob.height]    15
        ld      HL                  $0408
        ld      [$.TEMP6]           HL
        call    :detectCollisionWithSonic
        call    nc  :hitPlayer._35fd
        ld      [IX`mob+#mob.width]     20
        ld      [IX`mob+#mob.height]    32
        ld      HL                  $1006
        ld      [$.TEMP6]           HL
        call    :detectCollisionWithSonic
        ld      HL                  $0404
        ld      [$.TEMP1]           HL
        call    nc  :hitPlayer
        ld      L                   [IX`mob+#mob.Yspeed+0]
        ld      H                   [IX`mob+#mob.Yspeed+1]
        ld      A                   [IX`mob+#mob.Ydirection]
        ld      DE                  $0020
        add     HL                  DE
        adc     A                   $00
        ld      [IX`mob+#mob.Yspeed+0]      L
        ld      [IX`mob+#mob.Yspeed+1]      H
        ld      [IX`mob+#mob.Ydirection]    A
        ld      A                   [IX`mob+#mob.unknown11]
        cp      $50
        jr      c   ._1
        ld      [IX`mob+#mob.Xspeed+0]      $40
        ld      [IX`mob+#mob.Xspeed+1]      $00
        ld      [IX`mob+#mob.Xdirection]    $00
        ld      DE                  ._837e
        ld      BC                  ._8379
        call    :animateMob
        jp      ._2
        
._1     ld      [IX`mob+#mob.Xspeed+0]      $C0
        ld      [IX`mob+#mob.Xspeed+1]      $FF
        ld      [IX`mob+#mob.Xdirection]    $FF
        ld      DE                  ._837e
        ld      BC                  ._8374
        call    :animateMob
._2     ld      A                   [$.FRAMECOUNT]
        and     $07
        ret     nz
        inc     [IX`mob+#mob.unknown11]
        ld      A                   [IX`mob+#mob.unknown11]
        cp      $A0
        ret     c
        ld      [IX`mob+#mob.unknown11] $00
        ret
        
._8374  BYTE $00, $06, $01, $06, $FF
._8379  BYTE $02, $06, $03, $06, $FF

        ;sprite layout
._837e  BYTE $FE, $00, $02, $FF, $FF, $FF
        BYTE $20, $22, $24, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $FE, $00, $02, $FF, $FF, $FF
        BYTE $26, $28, $2A, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $40, $42, $FF, $FF, $FF, $FF
        BYTE $4A, $4C, $4E, $FF, $FF, $FF
        BYTE $FF, $FF, $FF, $FF, $FF, $FF

        BYTE $40, $42, $FF, $FF, $FF, $FF
        BYTE $44, $46, $48, $FF, $FF, $FF
        BYTE $FF
}