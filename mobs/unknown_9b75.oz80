;; Sonic 1 Master System Disassembly
   -------------------------------------------------------------------------------------------------
   created by Kroc Camen <kroc@camendesign.com> and given to the Public Domain; you may do anything
   you like with this code as long as you respect the TradeMarks and (any) Copyrights within.
   absolutely no warranty implied
   =================================================================================================
;;

PROC    :_9b75                                  SECTION ::mobs                  ;$9B75
        ;==============================================================================
PARAMS  IX`mob          ``Address of the current mob being processed
{
        set     5,[ix+#mob.flags]               ;mob does not collide with the floor
        ld      [ix+#mob.width],30
        ld      [ix+#mob.height],96
        ld      hl,$0000
        ld      [$.TEMP6],hl
        call    :detectCollisionWithSonic
        jr      c,._2
        ld      l,[ix+#mob.X+0]
        ld      h,[ix+#mob.X+1]
        ld      a,l
        add     a,a
        rl      h
        add     a,a
        rl      h
        add     a,a
        rl      h
        ld      e,h
        ld      l,[ix+#mob.Y+0]
        ld      h,[ix+#mob.Y+1]
        ld      a,l
        add     a,a
        rl      h
        add     a,a
        rl      h
        add     a,a
        rl      h
        ld      d,h
        ld      hl,._9bd9
        ld      b,$05
        
.loop   ld      a,[hl]
        inc     hl
        cp      e
        jr      nz,._1
        ld      a,[hl]
        cp      d
        jr      nz,._1
        inc     hl
        ld      a,[hl]
        ld      [$.D2D3],a
        ld      a,$01
        ld      [$.D289],a
        set     4,[iy+#vars.flags6]
        jp      ._2
        
._1     inc     hl
        inc     hl
        djnz    .loop
        
._2     xor     a`zero
        ld      [ix+#mob.spriteLayout+0],a`zero
        ld      [ix+#mob.spriteLayout+1],a`zero
        ret

._9bd9  BYTE $7D, $1A, $15, $7D, $01, $14, $01, $3C, $18, $01, $02
        BYTE $19, $14, $0F, $1A
}